{"version":3,"sources":["components/Header.js","components/StartTestBtn.js","helpers/getFile.js","components/ShowReadme.js","components/ReadmeBtn.js","helpers/toClipboard.js","components/CopyLinkBtn.js","components/CopyRulesBtn.js","components/SubscribeFilterBtn.js","components/TestItem.js","testsData.js","components/TestList.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","versionHover","project","version","className","title","StartTestBtn","link","href","target","rel","getFile","fileUrl","a","fetch","window","location","response","text","responseText","ShowReadme","state","readmeFile","getReadme","readmeUrl","props","setState","this","source","React","Component","defaultProps","customStyles","content","width","height","padding","boxSizing","borderRadius","top","bottom","left","right","border","background","color","Modal","setAppElement","document","getElementById","ReadmeBtn","modalIsOpen","openModal","closeModal","readmeBtn","type","name","onClick","isOpen","onRequestClose","style","contentLabel","toClipboard","data","successMessage","dummy","createElement","body","appendChild","value","select","execCommand","removeChild","alert","CopyLinkBtn","copyLink","rulesUrl","url","copyLinkBtn","CopyRulesBtn","rulesText","componentDidMount","copyRules","copyRulesBtn","SubscribeFilterBtn","subscribeBtn","TestItem","compatibility","incompatibility","rulesBtn","testsData","id","TestList","onSearch","event","escapedValue","replace","searchTerm","RegExp","toLowerCase","renderTestsData","map","key","filterTests","filteredTests","filter","testData","testTitle","test","length","placeholder","onChange","autoFocus","Footer","currentYear","Date","getFullYear","toString","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5acf018.chunk.js","sourcesContent":["import React from 'react';\nimport project from '../../package.json';\n\nfunction Header() {\n    const versionHover = `v${project.version}`;\n\n    return (\n        <header>\n            <div className=\"header-container\">\n                <div>\n                    <div className=\"logo-container\">\n                        <div className=\"adgLogo\" />\n                        <div>\n                            <h1>ADGUARD</h1>\n                            <h3 title={versionHover}>Automatic tests</h3>\n                        </div>\n                    </div>\n                    <div className=\"mission\">\n                        This small website is supposed to assist AdGuard QA department in testing\n                        different versions of AdGuard.\n                        The task of testing content blocking was always the most complicated,\n                        and this website aims to fix the situation, and make it as easy as possible.\n                    </div>\n                </div>\n                <div className=\"instruction\">\n                    <h2>Testing instruction:</h2>\n                    <p>\n                        It&lsquo;s important to disable all filter lists as\n                        they may mess with the tests results.\n                    </p>\n                    <ul>\n                        <li>Disable all filter lists.</li>\n                        <li>\n                            Add the filter list corresponding to the test\n                            you&lsquo;re going to check.\n                        </li>\n                        <li>Enter the test page and refresh it.</li>\n                        <li>If any tests doesn&lsquo;t pass, clear your browser cache.</li>\n                    </ul>\n                    <p>Expected result: all tests are marked as passed.</p>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StartTestBtn = ({ link }) => (\n    <a\n        href={link}\n        className=\"btn startTest\"\n        title=\"Start test\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n    >\n        Start test\n    </a>\n);\n\nexport default StartTestBtn;\n\nStartTestBtn.propTypes = {\n    link: PropTypes.string.isRequired,\n};\n","const getFile = async (fileUrl) => {\n    const response = await fetch(window.location.href + fileUrl);\n    const responseText = await response.text();\n    return responseText;\n};\n\nexport default getFile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport getFile from '../helpers/getFile';\n\nexport default class ShowReadme extends React.Component {\n    state = {\n        readmeFile: '',\n    };\n\n    async componentDidMount() {\n        await this.getReadme();\n    }\n\n    getReadme = async () => {\n        const { readmeUrl } = this.props;\n        this.setState({ readmeFile: await getFile(readmeUrl) });\n    }\n\n    render() {\n        const { readmeFile } = this.state;\n        return (\n            <div>\n                <ReactMarkdown\n                    className=\"readmeText\"\n                    source={readmeFile}\n                />\n            </div>\n        );\n    }\n}\n\nShowReadme.propTypes = {\n    readmeUrl: PropTypes.string,\n};\n\nShowReadme.defaultProps = {\n    readmeUrl: '',\n};\n","import React from 'react';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport ShowReadme from './ShowReadme';\n\nconst customStyles = {\n    content: {\n        width: '100%',\n        height: '100%',\n        padding: '5vw',\n        boxSizing: 'border-box',\n        borderRadius: '0',\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        border: 'unset',\n        background: '#585965',\n        color: 'white',\n    },\n};\n\nModal.setAppElement(document.getElementById('root'));\n\nexport default class ReadmeBtn extends React.Component {\n    state = {\n        modalIsOpen: false,\n    };\n\n    openModal = () => {\n        this.setState({ modalIsOpen: true });\n    }\n\n    closeModal = () => {\n        this.setState({ modalIsOpen: false });\n    }\n\n    render() {\n        const { readmeBtn, readmeUrl } = this.props;\n        const { modalIsOpen } = this.state;\n        return (\n            <span>\n                <button\n                    type=\"button\"\n                    name=\"Show Readme file\"\n                    onClick={this.openModal}\n                    rel=\"noopener noreferrer\"\n                    className={`btn readme ${readmeBtn}`}\n                    title=\"README.md\"\n                >\n                    Readme\n                </button>\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={this.closeModal}\n                    style={customStyles}\n                    contentLabel=\"README.md\"\n                >\n                    <button\n                        onClick={this.closeModal}\n                        type=\"button\"\n                        className=\"close-readme\"\n                    />\n                    <ShowReadme readmeUrl={readmeUrl} />\n                </Modal>\n            </span>\n        );\n    }\n}\n\nReadmeBtn.propTypes = {\n    readmeUrl: PropTypes.string,\n    readmeBtn: PropTypes.string.isRequired,\n};\n\nReadmeBtn.defaultProps = {\n    readmeUrl: '',\n};\n","const toClipboard = (data, successMessage) => {\n    const dummy = document.createElement('textarea');\n    document.body.appendChild(dummy);\n    dummy.value = data;\n    dummy.select();\n    document.execCommand('copy');\n    document.body.removeChild(dummy);\n    alert(successMessage); // eslint-disable-line no-alert\n};\n\nexport default toClipboard;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport toClipboard from '../helpers/toClipboard';\n\nexport default class CopyLinkBtn extends React.Component {\n    copyLink = () => {\n        if (this.props.rulesUrl) {\n            const url = window.location.href + this.props.rulesUrl;\n            toClipboard(url, `Link for the rules for test \"${this.props.title}\" have been copied to your clipboard.`);\n        }\n    }\n\n    render() {\n        const { copyLinkBtn } = this.props;\n        return (\n            <button\n                className={`btn copyLink ${copyLinkBtn}`}\n                type=\"button\"\n                name=\"Copy link for rules file\"\n                onClick={this.copyLink}\n            >\n                Copy link\n            </button>\n        );\n    }\n}\n\nCopyLinkBtn.propTypes = {\n    rulesUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    copyLinkBtn: PropTypes.string.isRequired,\n};\n\nCopyLinkBtn.defaultProps = {\n    rulesUrl: '',\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport getFile from '../helpers/getFile';\nimport toClipboard from '../helpers/toClipboard';\n\nexport default class CopyRulesBtn extends React.Component {\n    state = {\n        rulesText: '',\n    }\n\n    componentDidMount = async () => {\n        this.state.rulesText = await getFile(this.props.rulesUrl);\n    }\n\n    copyRules = async () => {\n        await toClipboard(this.state.rulesText, `The rules for the test \"${this.props.title}\" have been copied to your clipboard.`);\n    }\n\n    render() {\n        const { copyRulesBtn } = this.props;\n        return (\n            <button\n                className={`btn copyRules ${copyRulesBtn}`}\n                type=\"button\"\n                name=\"Copy rules list\"\n                onClick={this.copyRules}\n            >\n                Copy rules\n            </button>\n        );\n    }\n}\n\nCopyRulesBtn.propTypes = {\n    rulesUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    copyRulesBtn: PropTypes.string.isRequired,\n};\n\nCopyRulesBtn.defaultProps = {\n    rulesUrl: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SubscribeFilterBtn = ({ subscribeBtn, rulesUrl }) => (\n    <a\n        href={`https://subscribe.adblockplus.org?location=${window.location.href}${rulesUrl}`}\n        className={`btn subscribe ${subscribeBtn}`}\n        title=\"Subscribe filter\"\n    >\n        Subscribe\n    </a>\n);\n\nexport default SubscribeFilterBtn;\n\nSubscribeFilterBtn.propTypes = {\n    rulesUrl: PropTypes.string,\n    subscribeBtn: PropTypes.string.isRequired,\n};\n\nSubscribeFilterBtn.defaultProps = {\n    rulesUrl: '',\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport StartTestBtn from './StartTestBtn';\nimport ReadmeBtn from './ReadmeBtn';\nimport CopyLinkBtn from './CopyLinkBtn';\nimport CopyRulesBtn from './CopyRulesBtn';\nimport SubscribeFilterBtn from './SubscribeFilterBtn';\n\nconst TestItem = ({\n    title, link, rulesUrl, compatibility, incompatibility, readmeUrl,\n}) => {\n    const rulesBtn = () => (rulesUrl ? 'enabled' : 'disabled');\n\n    const readmeBtn = () => (readmeUrl ? 'enabled' : 'disabled');\n\n    return (\n        <div className=\"testItem-container\">\n            <div className=\"test-info\">\n                <a\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"test-title\"\n                >\n                    {title}\n                </a>\n                <div className=\"compatibility\">{compatibility}</div>\n                <div className=\"incompatibility\">{incompatibility}</div>\n            </div>\n            <div className=\"test-actions\">\n\n                <StartTestBtn link={link} />\n\n                <ReadmeBtn\n                    readmeBtn={readmeBtn()}\n                    readmeUrl={readmeUrl}\n                />\n\n                <CopyLinkBtn\n                    copyLinkBtn={rulesBtn()}\n                    rulesUrl={rulesUrl}\n                    title={title}\n                />\n\n                <CopyRulesBtn\n                    copyRulesBtn={rulesBtn()}\n                    rulesUrl={rulesUrl}\n                    title={title}\n                />\n\n                <SubscribeFilterBtn\n                    subscribeBtn={rulesBtn()}\n                    rulesUrl={rulesUrl}\n                />\n\n            </div>\n            <div className=\"spacer\" />\n        </div>\n    );\n};\n\nexport default TestItem;\n\nTestItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    rulesUrl: PropTypes.string,\n    readmeUrl: PropTypes.string,\n    compatibility: PropTypes.string,\n    incompatibility: PropTypes.string,\n};\n\nTestItem.defaultProps = {\n    rulesUrl: '',\n    readmeUrl: '',\n    compatibility: '',\n    incompatibility: '',\n};\n","const testsData = [\n    {\n        id: 1,\n        title: 'Simple rules',\n        link: 'Filters/simple-rules/test-simple-rules.html',\n        rulesUrl: 'Filters/simple-rules/test-simple-rules.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 2,\n        title: 'Generic hide rules',\n        link: 'Filters/simple-rules/generichide-test/generichide-test.html',\n        rulesUrl: 'Filters/simple-rules/generichide-test/generichide-test.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 3,\n        title: 'Extended Css rules',\n        link: 'Filters/extended-css-rules/test-extended-css-rules.html',\n        rulesUrl: 'Filters/extended-css-rules/test-extended-css-rules.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy, Safari',\n        incompatibility: 'iOS, Content Blocker',\n    },\n    {\n        id: 4,\n        title: 'Extended CSS rules injection into iframe created with js',\n        link: 'Filters/extended-css-rules/extended-css-iframejs-injection/extended-css-iframejs-injection.html',\n        rulesUrl: 'Filters/extended-css-rules/extended-css-iframejs-injection/extended-css-iframejs-injection.txt',\n        compatibility: 'Chrome, Edge, FF, Opera, Edge Legacy, Safari',\n        incompatibility: 'Windows, MacOS, Android, iOS, Content Blocker',\n    },\n    {\n        id: 5,\n        title: '$important rules',\n        link: 'Filters/important-rules/test-important-rules.html',\n        rulesUrl: 'Filters/important-rules/test-important-rules.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n        readmeUrl: 'Filters/important-rules/README.md',\n    },\n    {\n        id: 6,\n        title: '$important rule vs $urlblock exception',\n        link: 'Filters/important-rules/important-vs-urlblock/test-important-vs-urlblock.html',\n        rulesUrl: 'Filters/important-rules/important-vs-urlblock/test-important-vs-urlblock.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy, iOS, Content Blocker',\n        incompatibility: 'Safari',\n        readmeUrl: 'Filters/important-rules/important-vs-urlblock/README.md',\n    },\n    {\n        id: 7,\n        title: '$replace rules',\n        link: 'Filters/replace-rules/test-replace-rules.html',\n        rulesUrl: 'Filters/replace-rules/test-replace-rules.txt',\n        compatibility: 'Windows, MacOS, Android, FF',\n        incompatibility: 'Chrome, Edge, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n        readmeUrl: 'Filters/replace-rules/README.md',\n    },\n    {\n        id: 8,\n        title: '$replace rule vs $generichide exception',\n        link: 'Filters/replace-rules/replace-vs-generichide-rule/replace-vs-generichide-rule.html',\n        rulesUrl: 'Filters/replace-rules/replace-vs-generichide-rule/replace-vs-generichide-rule.txt',\n        compatibility: 'Windows, MacOS, Android, FF',\n        incompatibility: 'Chrome, Edge, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 9,\n        title: '$replace rule vs $content exception',\n        link: 'Filters/replace-rules/replace-vs-content-rule/replace-vs-content-rule.html',\n        rulesUrl: 'Filters/replace-rules/replace-vs-content-rule/replace-vs-content-rule.txt',\n        compatibility: 'Windows, MacOS, Android, FF',\n        incompatibility: 'Chrome, Edge, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 10,\n        title: '$replace rule vs $elemhide exception',\n        link: 'Filters/replace-rules/replace-vs-elemhide-rule/replace-vs-elemhide-rule.html',\n        rulesUrl: 'Filters/replace-rules/replace-vs-elemhide-rule/replace-vs-elemhide-rule.txt',\n        compatibility: 'Windows, MacOS, Android, FF',\n        incompatibility: 'Chrome, Edge, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 11,\n        title: '$csp rules',\n        link: 'Filters/csp-rules/test-csp-rules.html',\n        rulesUrl: 'Filters/csp-rules/test-csp-rules.txt',\n        compatibility: 'Windows, MacOS, Android, FF, Chrome, Edge, Opera',\n        incompatibility: 'Edge Legacy, Safari, iOS, Content Blocker',\n        readmeUrl: 'Filters/csp-rules/README.md',\n    },\n    {\n        id: 12,\n        title: '$csp exception test',\n        link: 'Filters/csp-rules/csp-global-exception/csp-global-exception.html',\n        rulesUrl: 'Filters/csp-rules/csp-global-exception/csp-global-exception.txt',\n        compatibility: 'Windows, MacOS, Android, FF, Chrome, Edge, Opera',\n        incompatibility: 'Edge Legacy, Safari, iOS, Content Blocker',\n        readmeUrl: 'Filters/csp-rules/csp-global-exception/README.md',\n    },\n    {\n        id: 13,\n        title: 'Websocket blocking',\n        link: 'Filters/websockets/test-websockets.html',\n        rulesUrl: 'Filters/websockets/test-websockets.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy',\n        incompatibility: 'Safari, iOS, Content Blocker',\n    },\n    {\n        id: 14,\n        title: 'Content rules',\n        link: 'Filters/content-rules/test-content-rules.html',\n        rulesUrl: 'Filters/content-rules/test-content-rules.txt',\n        compatibility: 'Windows, MacOS, Android, FF',\n        incompatibility: 'Chrome, Edge, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 15,\n        title: '$content modifier tests',\n        link: 'Filters/content-rules/content-modifier-test/content-modifier-test.html',\n        rulesUrl: 'Filters/content-rules/content-modifier-test/content-modifier-test.txt',\n        compatibility: 'Windows, MacOS, Android, FF',\n        incompatibility: 'Chrome, Edge, Opera, Edge Legacy, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 16,\n        title: 'Script rules',\n        link: 'Filters/script-rules/test-script-rules.html',\n        rulesUrl: 'Filters/script-rules/test-script-rules.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy, Safari',\n        incompatibility: 'iOS, Content Blocker',\n    },\n    {\n        id: 17,\n        title: 'Scriptlet rules',\n        link: 'Filters/scriptlet-rules/test-scriptlet-rules.html',\n        rulesUrl: 'Filters/scriptlet-rules/test-scriptlet-rules.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, Opera, FF, Safari',\n        incompatibility: 'Edge Legacy, iOS, Content Blocker',\n    },\n    {\n        id: 18,\n        title: 'Userscripts',\n        link: 'Userscripts/test-userscripts.html',\n        rulesUrl: 'Userscripts/apiTester/api-tester.user.js',\n        compatibility: 'Windows, MacOS, Android',\n        incompatibility: 'Chrome, Edge, Opera, Edge Legacy, FF, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 19,\n        title: 'Userscripts: GM API v4 tests',\n        link: 'Userscripts/gmapi-v4-tests.html',\n        rulesUrl: 'Userscripts/GMapiV4Tester/GMapi_v4-tester.user.js',\n        compatibility: 'Windows, MacOS, Android',\n        incompatibility: 'Chrome, Edge, Opera, Edge Legacy, FF, Safari, iOS, Content Blocker',\n    },\n    {\n        id: 20,\n        title: 'Popup blocker',\n        link: 'PopupBlocker/test-popup-blocker.html',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy, Safari',\n        incompatibility: 'iOS, Content Blocker',\n    },\n    {\n        id: 21,\n        title: 'Popup blocker event recovery',\n        link: 'PopupBlocker/test-event-recovery.html',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera, Edge Legacy, Safari',\n        incompatibility: 'iOS, Content Blocker',\n    },\n    {\n        id: 22,\n        title: '$badfilter rules',\n        link: 'Filters/badfilter-rules/test-badfilter-rules.html',\n        rulesUrl: 'Filters/badfilter-rules/test-badfilter-rules.txt',\n        compatibility: 'Chrome, Edge, FF, Edge Legacy, Safari, Opera',\n        incompatibility: 'Windows, MacOS, Android, iOS, Content Blocker',\n        readmeUrl: 'Filters/badfilter-rules/README.md',\n    },\n    {\n        id: 23,\n        title: '$network rules',\n        link: 'Filters/network-rules/test-network-rules.html',\n        rulesUrl: 'Filters/network-rules/test-network-rules.txt',\n        compatibility: 'Windows, MacOS, Android',\n        incompatibility: 'Chrome, Edge, FF, Edge Legacy, Safari, Opera, iOS, Content Blocker',\n        readmeUrl: 'Filters/network-rules/README.md',\n    },\n    {\n        id: 24,\n        title: '$redirect rules',\n        link: 'Filters/redirect-rules/test-redirect-rules.html',\n        rulesUrl: 'Filters/redirect-rules/test-redirect-rules.txt',\n        compatibility: 'Windows, MacOS, Android, Chrome, Edge, FF, Opera',\n        incompatibility: 'Edge Legacy,  Safari, iOS, Content Blocker',\n        readmeUrl: 'Filters/redirect-rules/README.md',\n    },\n    {\n        id: 25,\n        title: '$redirect resources security test',\n        link: 'Filters/redirect-security/test-redirect-security.html',\n        rulesUrl: 'Filters/redirect-security/test-redirect-security.txt',\n        compatibility: 'Chrome, Edge, FF, Opera',\n        incompatibility: 'Windows, MacOS, Android, Edge Legacy, Safari, iOS, Content Blocker',\n        readmeUrl: 'Filters/redirect-security/README.md',\n    },\n];\n\nexport default testsData;\n","import React from 'react';\nimport TestItem from './TestItem';\nimport testsData from '../testsData';\n\nexport default class TestList extends React.Component {\n    state = {};\n\n    onSearch = (event) => {\n        const { value } = event.target;\n        const escapedValue = value.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n        const searchTerm = new RegExp(escapedValue.toLowerCase());\n        this.setState({ searchTerm });\n    };\n\n    renderTestsData = testsData => testsData\n        .map(testsData => <TestItem key={testsData.id} {...testsData} />)\n\n    filterTests = (testsData, searchTerm) => {\n        if (!searchTerm) {\n            return this.renderTestsData(testsData);\n        }\n        const filteredTests = testsData.filter((testData) => {\n            const testTitle = testData.title.toLowerCase();\n            return searchTerm.test(testTitle);\n        });\n        if (filteredTests.length > 0) {\n            return this.renderTestsData(filteredTests);\n        }\n        return 'There is no test matching this name.';\n    };\n\n    render() {\n        const { searchTerm } = this.state;\n        return (\n            <div className=\"testList-container\">\n                <form>\n                    <input\n                        type=\"text\"\n                        className=\"search-form\"\n                        placeholder=\"Search for the test\"\n                        onChange={this.onSearch}\n                        // eslint-disable-next-line jsx-a11y/no-autofocus\n                        autoFocus\n                    />\n                </form>\n                {this.filterTests(testsData, searchTerm)}\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nfunction Footer() {\n    const currentYear = new Date().getFullYear().toString();\n\n    return (\n        <footer>\n            <div className=\"footer-logo\">\n                <div className=\"copyrights\">\n                    &copy; AdGuard, 2009–\n                    {currentYear}\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport './styles/styles.scss';\nimport Header from './components/Header';\nimport TestList from './components/TestList';\nimport Footer from './components/Footer';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <TestList />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}